(require riscv-lib)

; -------------------- VexRiscv --------------------
(set [vex-traces '("dhrystone-microNoCsr.vcd"
		   "dhrystone-smallest.vcd"
		   "dhrystone-smallAndProductive.vcd"
		   "dhrystone-smallAndProductiveICache.vcd"
		   "dhrystone-twoThreeStage.vcd"
		   "dhrystone-secure.vcd"
		   "dhrystone-linux.vcd"
     		   "dhrystone-full.vcd"
		   "dhrystone-fullNoMmuMaxPerf.vcd")])
(defun setup [(g g)] (set [g (groups "isMoving")]))
(defun is-stalled [(g g)] (in 0 (map (lambda [x] (in-group x #isMoving)) g)))
(defun is-valid [] (&& TOP.clk (! TOP.reset)))
(calc-pipeline-stall vex-traces)

; --------------------   Ibex   --------------------
(defun is-stalled [] (!= 0 (sum (in-scope 'TOP.ibex_simple_system.u_top.u_ibex_top.u_ibex_core.id_stage_i.stall_ (list ~alu ~branch ~id ~jump ~ld_hz ~mem ~multdiv ~wb)))))
(defun is-valid [] (&& TOP.IO_CLK TOP.IO_RST_N))
(calc-pipeline-stall '("ibex-base.vcd" "ibex-max.vcd" "ibex-icache.vcd"))
